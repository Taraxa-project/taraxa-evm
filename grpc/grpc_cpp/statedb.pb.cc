// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statedb.proto

#include "statedb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VmId;
}  // namespace protobuf_common_2eproto
namespace protobuf_statedb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_statedb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_KeyMessage;
}  // namespace protobuf_statedb_2eproto
namespace taraxa {
namespace vm {
namespace statedb {
class KeyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyMessage>
      _instance;
} _KeyMessage_default_instance_;
class KeyAndValueMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyAndValueMessage>
      _instance;
} _KeyAndValueMessage_default_instance_;
}  // namespace statedb
}  // namespace vm
}  // namespace taraxa
namespace protobuf_statedb_2eproto {
static void InitDefaultsKeyMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::taraxa::vm::statedb::_KeyMessage_default_instance_;
    new (ptr) ::taraxa::vm::statedb::KeyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::taraxa::vm::statedb::KeyMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_KeyMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsKeyMessage}, {
      &protobuf_common_2eproto::scc_info_VmId.base,
      &protobuf_common_2eproto::scc_info_BytesMessage.base,}};

static void InitDefaultsKeyAndValueMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::taraxa::vm::statedb::_KeyAndValueMessage_default_instance_;
    new (ptr) ::taraxa::vm::statedb::KeyAndValueMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::taraxa::vm::statedb::KeyAndValueMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_KeyAndValueMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsKeyAndValueMessage}, {
      &protobuf_statedb_2eproto::scc_info_KeyMessage.base,
      &protobuf_common_2eproto::scc_info_BytesMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_KeyMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyAndValueMessage.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyMessage, vmid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyMessage, memoryaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyAndValueMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyAndValueMessage, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::taraxa::vm::statedb::KeyAndValueMessage, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::taraxa::vm::statedb::KeyMessage)},
  { 7, -1, sizeof(::taraxa::vm::statedb::KeyAndValueMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::taraxa::vm::statedb::_KeyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::taraxa::vm::statedb::_KeyAndValueMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "statedb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rstatedb.proto\022\021taraxa.vm.statedb\032\033goog"
      "le/protobuf/empty.proto\032\014common.proto\"k\n"
      "\nKeyMessage\022%\n\004vmId\030\001 \001(\0132\027.taraxa.vm.st"
      "atedb.VmId\0226\n\rmemoryAddress\030\002 \001(\0132\037.tara"
      "xa.vm.statedb.BytesMessage\"p\n\022KeyAndValu"
      "eMessage\022*\n\003key\030\001 \001(\0132\035.taraxa.vm.stated"
      "b.KeyMessage\022.\n\005value\030\002 \001(\0132\037.taraxa.vm."
      "statedb.BytesMessage2\327\002\n\007StateDB\022D\n\003Put\022"
      "%.taraxa.vm.statedb.KeyAndValueMessage\032\026"
      ".google.protobuf.Empty\022\?\n\006Delete\022\035.tarax"
      "a.vm.statedb.KeyMessage\032\026.google.protobu"
      "f.Empty\022E\n\003Get\022\035.taraxa.vm.statedb.KeyMe"
      "ssage\032\037.taraxa.vm.statedb.BytesMessage\022D"
      "\n\003Has\022\035.taraxa.vm.statedb.KeyMessage\032\036.t"
      "araxa.vm.statedb.BoolMessage\0228\n\005Close\022\027."
      "taraxa.vm.statedb.VmId\032\026.google.protobuf"
      ".EmptyB\tZ\007grpc_gob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 665);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "statedb.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_statedb_2eproto
namespace taraxa {
namespace vm {
namespace statedb {

// ===================================================================

void KeyMessage::InitAsDefaultInstance() {
  ::taraxa::vm::statedb::_KeyMessage_default_instance_._instance.get_mutable()->vmid_ = const_cast< ::taraxa::vm::statedb::VmId*>(
      ::taraxa::vm::statedb::VmId::internal_default_instance());
  ::taraxa::vm::statedb::_KeyMessage_default_instance_._instance.get_mutable()->memoryaddress_ = const_cast< ::taraxa::vm::statedb::BytesMessage*>(
      ::taraxa::vm::statedb::BytesMessage::internal_default_instance());
}
void KeyMessage::clear_vmid() {
  if (GetArenaNoVirtual() == NULL && vmid_ != NULL) {
    delete vmid_;
  }
  vmid_ = NULL;
}
void KeyMessage::clear_memoryaddress() {
  if (GetArenaNoVirtual() == NULL && memoryaddress_ != NULL) {
    delete memoryaddress_;
  }
  memoryaddress_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyMessage::kVmIdFieldNumber;
const int KeyMessage::kMemoryAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyMessage::KeyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_statedb_2eproto::scc_info_KeyMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:taraxa.vm.statedb.KeyMessage)
}
KeyMessage::KeyMessage(const KeyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vmid()) {
    vmid_ = new ::taraxa::vm::statedb::VmId(*from.vmid_);
  } else {
    vmid_ = NULL;
  }
  if (from.has_memoryaddress()) {
    memoryaddress_ = new ::taraxa::vm::statedb::BytesMessage(*from.memoryaddress_);
  } else {
    memoryaddress_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:taraxa.vm.statedb.KeyMessage)
}

void KeyMessage::SharedCtor() {
  ::memset(&vmid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memoryaddress_) -
      reinterpret_cast<char*>(&vmid_)) + sizeof(memoryaddress_));
}

KeyMessage::~KeyMessage() {
  // @@protoc_insertion_point(destructor:taraxa.vm.statedb.KeyMessage)
  SharedDtor();
}

void KeyMessage::SharedDtor() {
  if (this != internal_default_instance()) delete vmid_;
  if (this != internal_default_instance()) delete memoryaddress_;
}

void KeyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyMessage::descriptor() {
  ::protobuf_statedb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_statedb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyMessage& KeyMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_statedb_2eproto::scc_info_KeyMessage.base);
  return *internal_default_instance();
}


void KeyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:taraxa.vm.statedb.KeyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && vmid_ != NULL) {
    delete vmid_;
  }
  vmid_ = NULL;
  if (GetArenaNoVirtual() == NULL && memoryaddress_ != NULL) {
    delete memoryaddress_;
  }
  memoryaddress_ = NULL;
  _internal_metadata_.Clear();
}

bool KeyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:taraxa.vm.statedb.KeyMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .taraxa.vm.statedb.VmId vmId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vmid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .taraxa.vm.statedb.BytesMessage memoryAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memoryaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:taraxa.vm.statedb.KeyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:taraxa.vm.statedb.KeyMessage)
  return false;
#undef DO_
}

void KeyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:taraxa.vm.statedb.KeyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .taraxa.vm.statedb.VmId vmId = 1;
  if (this->has_vmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_vmid(), output);
  }

  // .taraxa.vm.statedb.BytesMessage memoryAddress = 2;
  if (this->has_memoryaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_memoryaddress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:taraxa.vm.statedb.KeyMessage)
}

::google::protobuf::uint8* KeyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:taraxa.vm.statedb.KeyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .taraxa.vm.statedb.VmId vmId = 1;
  if (this->has_vmid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_vmid(), deterministic, target);
  }

  // .taraxa.vm.statedb.BytesMessage memoryAddress = 2;
  if (this->has_memoryaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_memoryaddress(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:taraxa.vm.statedb.KeyMessage)
  return target;
}

size_t KeyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:taraxa.vm.statedb.KeyMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .taraxa.vm.statedb.VmId vmId = 1;
  if (this->has_vmid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vmid_);
  }

  // .taraxa.vm.statedb.BytesMessage memoryAddress = 2;
  if (this->has_memoryaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *memoryaddress_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:taraxa.vm.statedb.KeyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:taraxa.vm.statedb.KeyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:taraxa.vm.statedb.KeyMessage)
    MergeFrom(*source);
  }
}

void KeyMessage::MergeFrom(const KeyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:taraxa.vm.statedb.KeyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vmid()) {
    mutable_vmid()->::taraxa::vm::statedb::VmId::MergeFrom(from.vmid());
  }
  if (from.has_memoryaddress()) {
    mutable_memoryaddress()->::taraxa::vm::statedb::BytesMessage::MergeFrom(from.memoryaddress());
  }
}

void KeyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:taraxa.vm.statedb.KeyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyMessage::CopyFrom(const KeyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:taraxa.vm.statedb.KeyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyMessage::IsInitialized() const {
  return true;
}

void KeyMessage::Swap(KeyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyMessage::InternalSwap(KeyMessage* other) {
  using std::swap;
  swap(vmid_, other->vmid_);
  swap(memoryaddress_, other->memoryaddress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyMessage::GetMetadata() const {
  protobuf_statedb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_statedb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyAndValueMessage::InitAsDefaultInstance() {
  ::taraxa::vm::statedb::_KeyAndValueMessage_default_instance_._instance.get_mutable()->key_ = const_cast< ::taraxa::vm::statedb::KeyMessage*>(
      ::taraxa::vm::statedb::KeyMessage::internal_default_instance());
  ::taraxa::vm::statedb::_KeyAndValueMessage_default_instance_._instance.get_mutable()->value_ = const_cast< ::taraxa::vm::statedb::BytesMessage*>(
      ::taraxa::vm::statedb::BytesMessage::internal_default_instance());
}
void KeyAndValueMessage::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyAndValueMessage::kKeyFieldNumber;
const int KeyAndValueMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyAndValueMessage::KeyAndValueMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_statedb_2eproto::scc_info_KeyAndValueMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:taraxa.vm.statedb.KeyAndValueMessage)
}
KeyAndValueMessage::KeyAndValueMessage(const KeyAndValueMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::taraxa::vm::statedb::KeyMessage(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::taraxa::vm::statedb::BytesMessage(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:taraxa.vm.statedb.KeyAndValueMessage)
}

void KeyAndValueMessage::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

KeyAndValueMessage::~KeyAndValueMessage() {
  // @@protoc_insertion_point(destructor:taraxa.vm.statedb.KeyAndValueMessage)
  SharedDtor();
}

void KeyAndValueMessage::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void KeyAndValueMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyAndValueMessage::descriptor() {
  ::protobuf_statedb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_statedb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyAndValueMessage& KeyAndValueMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_statedb_2eproto::scc_info_KeyAndValueMessage.base);
  return *internal_default_instance();
}


void KeyAndValueMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:taraxa.vm.statedb.KeyAndValueMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool KeyAndValueMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:taraxa.vm.statedb.KeyAndValueMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .taraxa.vm.statedb.KeyMessage key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .taraxa.vm.statedb.BytesMessage value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:taraxa.vm.statedb.KeyAndValueMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:taraxa.vm.statedb.KeyAndValueMessage)
  return false;
#undef DO_
}

void KeyAndValueMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:taraxa.vm.statedb.KeyAndValueMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .taraxa.vm.statedb.KeyMessage key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .taraxa.vm.statedb.BytesMessage value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:taraxa.vm.statedb.KeyAndValueMessage)
}

::google::protobuf::uint8* KeyAndValueMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:taraxa.vm.statedb.KeyAndValueMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .taraxa.vm.statedb.KeyMessage key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .taraxa.vm.statedb.BytesMessage value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:taraxa.vm.statedb.KeyAndValueMessage)
  return target;
}

size_t KeyAndValueMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:taraxa.vm.statedb.KeyAndValueMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .taraxa.vm.statedb.KeyMessage key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .taraxa.vm.statedb.BytesMessage value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyAndValueMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:taraxa.vm.statedb.KeyAndValueMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyAndValueMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyAndValueMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:taraxa.vm.statedb.KeyAndValueMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:taraxa.vm.statedb.KeyAndValueMessage)
    MergeFrom(*source);
  }
}

void KeyAndValueMessage::MergeFrom(const KeyAndValueMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:taraxa.vm.statedb.KeyAndValueMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::taraxa::vm::statedb::KeyMessage::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::taraxa::vm::statedb::BytesMessage::MergeFrom(from.value());
  }
}

void KeyAndValueMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:taraxa.vm.statedb.KeyAndValueMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyAndValueMessage::CopyFrom(const KeyAndValueMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:taraxa.vm.statedb.KeyAndValueMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyAndValueMessage::IsInitialized() const {
  return true;
}

void KeyAndValueMessage::Swap(KeyAndValueMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyAndValueMessage::InternalSwap(KeyAndValueMessage* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyAndValueMessage::GetMetadata() const {
  protobuf_statedb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_statedb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace statedb
}  // namespace vm
}  // namespace taraxa
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::taraxa::vm::statedb::KeyMessage* Arena::CreateMaybeMessage< ::taraxa::vm::statedb::KeyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::taraxa::vm::statedb::KeyMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::taraxa::vm::statedb::KeyAndValueMessage* Arena::CreateMaybeMessage< ::taraxa::vm::statedb::KeyAndValueMessage >(Arena* arena) {
  return Arena::CreateInternal< ::taraxa::vm::statedb::KeyAndValueMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
